# -*- coding: utf-8 -*-
"""assignment_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Lrgbx1t_qP-X1jgtCGCuz0gRYwWBIVBB
"""

class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class LinkedList:
    def __init__(self):
        self.head = None

    def add_node(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return
        # Traverse to the end
        current = self.head
        while current.next:
            current = current.next
        current.next = new_node

    def print_list(self):
        if not self.head:
            print("The list is empty.")
            return
        current = self.head
        while current:
            print(current.data, end=" -> ")
            current = current.next
        print("None")

    def delete_nth_node(self, n):
        if not self.head:
            raise Exception("Cannot delete from an empty list.")
        if n <= 0:
            raise Exception("Index must be a positive integer (1-based).")

        if n == 1:
            self.head = self.head.next
            return

        current = self.head
        prev = None
        count = 1

        while current and count < n:
            prev = current
            current = current.next
            count += 1

        if not current:
            raise Exception(f"Index {n} out of range.")

        prev.next = current.next

try:
    ll = LinkedList()

    # Add some nodes
    ll.add_node(10)
    ll.add_node(20)
    ll.add_node(30)
    ll.add_node(40)

    print("Original List:")
    ll.print_list()

    # Delete 3rd node (30)
    ll.delete_nth_node(3)

    print("\nAfter deleting 3rd node:")
    ll.print_list()

    # Delete 1st node (10)
    ll.delete_nth_node(1)

    print("\nAfter deleting 1st node:")
    ll.print_list()

    # Attempt to delete out of range
    ll.delete_nth_node(10)

except Exception as e:
    print(f"Exception occurred: {e}")

